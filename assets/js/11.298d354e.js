(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{367:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"create-a-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-plugin"}},[t._v("#")]),t._v(" Create a plugin")]),t._v(" "),a("h2",{attrs:{id:"plugin-lifecycle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin-lifecycle"}},[t._v("#")]),t._v(" Plugin Lifecycle")]),t._v(" "),a("p",[t._v("Prior to any states that make the plugin visible, the plugin loader determines if all dependencies are present.")]),t._v(" "),a("h3",{attrs:{id:"state-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-events"}},[t._v("#")]),t._v(" State Events")]),t._v(" "),a("p",[t._v("There are three categories of state events:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Loading")]),t._v(": When plugin is loading, before the onStart hook is started.")]),t._v(" "),a("li",[a("code",[t._v("Running")]),t._v(": When plugin is running, after the onStart hook has been fired.")]),t._v(" "),a("li",[a("code",[t._v("Stopping")]),t._v(": When plugins is stopping, before the onStop hook is fired.")]),t._v(" "),a("li",[a("code",[t._v("Stopped")]),t._v(": When plugins is stopped, after the onStop hook has been fired.")])]),t._v(" "),a("h2",{attrs:{id:"logging-debugging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logging-debugging"}},[t._v("#")]),t._v(" Logging & Debugging")]),t._v(" "),a("p",[t._v("There are a few logging frameworks available for use in Scala. Logging is preferable to printing to stdout or stderr with "),a("code",[t._v("println()")]),t._v(" for a number of reasons:")]),t._v(" "),a("ul",[a("li",[t._v("Logged messages are labeled with a source name, making it easier to figure out where the logged messages are coming from.")]),t._v(" "),a("li",[t._v("Logged messages have a severity level which allow for simple filtering.")]),t._v(" "),a("li",[t._v("The available logger frameworks allow you to enable or disable messages from certain sources.")])]),t._v(" "),a("p",[t._v("Streamy uses "),a("code",[t._v("org.slf4j.Logger")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"getting-a-logger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-a-logger"}},[t._v("#")]),t._v(" Getting a Logger")]),t._v(" "),a("p",[t._v("The logging extension is used to provide logging system.\nIt is accessible directly in a plugin.")]),t._v(" "),a("div",{staticClass:"language-scala extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MyPlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PluginData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Plugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" onStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world !"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If you need logging in another place, simply use the logging extension.")]),t._v(" "),a("div",{staticClass:"language-scala extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MyComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implicit")]),t._v(" system"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ActorSystem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world !"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"emitting-messages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emitting-messages"}},[t._v("#")]),t._v(" Emitting messages")]),t._v(" "),a("p",[t._v("Emitting a message with your logger is very simple.")]),t._v(" "),a("blockquote",[a("p",[t._v("The following example assumes that the getter method for your logger is named "),a("code",[t._v("log")]),t._v(", as shown in the previous section. This may differ for you depending on what you named your getter method.")])]),t._v(" "),a("div",{staticClass:"language-scala extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[t._v("log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("warn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")])])}),[],!1,null,null,null);s.default=n.exports}}]);